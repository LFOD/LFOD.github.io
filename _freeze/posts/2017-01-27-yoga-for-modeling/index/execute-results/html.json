{
  "hash": "c6c695c7ed77ad622fe488daa0076b4f",
  "result": {
    "markdown": "---\nauthor: \"Lucy D'Agostino McGowan\"\ndate: 2017-01-27T14:30:26-06:00\ndraft: false\nimage: \"\"\nshare: true\ntags:\n- rms\n- rstats\ntitle: \"Yoga for modeling\"\ndescription: \"A New Year's resolution for all of our models: get more flexible! By flexible, we mean let's be more intential about fitting nonlinear parametric models.\"\n---\n\n\nA New Year's resolution for all of our models: get more flexible! \n\n*As an aside, I'm better at implementing yoga for my models than yoga for myself, most of the time I end up like this:*\n\n![](http://imgs.xkcd.com/comics/picture_a_grassy_field.png)\n\nAnyways, let's make our models flexible! By flexible, we mean let's be more intentional about fitting nonlinear parametric models.\n\n\n\n\n\n## What do you mean by nonlinear modeling\n\nBy nonlinear modeling, we mean fitting parametric models with nonlinear terms. In particular, Professor Harrell suggests restricted cubic splines (more on this below). So by this definition, you could be fitting a \"linear\" model (as on ordinary least squares), with nonlinear terms. We brought up in class that this can cause some confusion, and setting on calling it \"Gaussian regression\" So you heard it here first, folks, from now on, refer to your ordinary least squares models as \"Gaussian\". \n\n<p style=\"text-align:right; color:#EB6864; font-size: 10pt;  LINE-HEIGHT:15px;\">\nUpdate: Professor Harrell proofed this and suggested <br>\n\"what about just calling it OLS?\", so nevermind on <br> Gaussian, it had a good run...</p>\n\nI spent a really long time trying to think up a whitty pun/slogan for this name change, alas, all you get is this:\n\n![](http://imgs.xkcd.com/comics/math_paper.png)\n\n*If you have a particulary clever slogan, [send it to me.](http://twitter.com/LucyStats)*\n\n<p style=\"text-align:right; color:#EB6864; font-size: 10pt;  LINE-HEIGHT:15px;\">\nUpdate 2: Actually! We're putting it to a vote. <br>\nGaussian may have another chance. <br> Will update in a further post.</p>\n\nTo do this nonlinear modeling, restricted cubic splines are suggested because\n\n1. **they allow for flexibility without costing too many degrees of freedom** (it only costs $k-1$ degrees of freedom, here $k$ is the total number of knots) *for comparison, unrestricted cubic splines require $k+3$ parameters to be estimated*  \n\n2. **they force linearity in the tails** (that is before the first knot and after the last knot) *this is good because cubic spline functions can have weird behavior in the tails*  \n\n3. **regression coeffcients can be estimated using standard techniques**  \n\n4. **there are easy functions in `R` to do it** Harrell's `rms` package makes restricted cubic spines very easy to implement. Simply wrap your predictor in the `rcs()` function within your model statement. For example, if I were to fit a Gaussian model (see what I did there ðŸ˜‰), I would run the following code to fit `x` flexibly with 4 knots:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rms)\nk <- 4\nols(y ~ rcs(x, k))\n```\n:::\n\n\n## Why should I care about nonlinear modeling\n\nFitting flexible models is an excellent way to avoid having to test a whole bunch of assumptions that are hard to prove/disprove! Additionally, once you've fit a model, changing it based on \"model checking\" procedures has the danger of inflating your type 1 error ðŸ˜±. We discuss an excellent paper by [Grambsch and O'Brien](http://onlinelibrary.wiley.com/doi/10.1002/sim.4780100504/full) demonstrating that testing for nonlinear effects & then proceeding to drop from from the model if the test is not significant has real implications for the type 1 error. Might as well just model everything flexibly from the get-go! *But what about my degrees of freedom? ah yes, the next section is just for you!* \n\n## What if I don't have enough degrees of freedom for nonlinear modeling\n\nIn predictive modeling, we are always concerned with *overfitting*, or creating models that describe the population we've sampled very well, but are not generalizable. In the extreme case, you can imagine if you fit a model with 50 participants and included 50 covariates, one for each participant, you could perfectly predict any outcome (but that would be a pretty silly model). In order to avoid overfitting disasters, there are useful rules of thumb we try to follow. In general, we try to fit models that have around $m/15$ covariates, where $m$ varies depending on the type of model in the following manner (for those following along, this is on page 74 of [Regression Modeling Strategies](https://www.amazon.com/Regression-Modeling-Strategies-Applications-Statistics/dp/3319194240/ref=sr_1_1?ie=UTF8&qid=1484713166&sr=8-1&keywords=regression+modeling+strategies)).\n\nResponse | m\n------|----\ncontinuous | the total sample size\nbinary | # of events\nsurvival | # of failures\n\nNow that we've convinced you that degrees of freedom matter, I'm sure you're thinking \"but nonlinear terms add degrees of freedom!\" True. Restricted cubic splines are a bit less aggressive that regular cubic splines in terms of degrees of freedom usage, but even still sometimes that is not enough. In those cases, we need to determine how to best utilize our degrees of freedom. Professor Harrell recommends the following (page 67 of [RMS](https://www.amazon.com/Regression-Modeling-Strategies-Applications-Statistics/dp/3319194240/ref=sr_1_1?ie=UTF8&qid=1484713166&sr=8-1&keywords=regression+modeling+strategies)):\n\n* Let all continuous predictors be represented as restricted cubic splines \n* Let all categorical predictors retain their original categories except for pooling of very low prevalence categories (e.g., ones containing < 6 observations).\n* Fit this general main effects model.\n* Compute the partial $\\chi^2$ statistic for testing the association of each predictor with the response, adjusted for all other predictors. \n* Sort the partial association statistics in descending order.\n* Assign more degrees of freedom for variables high on the list (ie allow for nonlinear terms/more knots for highly ranked covariates)\n\n\n<span style=\"color:#EB6864; font-size: 15pt\"> VERY IMPORTANT: Make certain that tests of nonlinearity are not revealed as this would bias the analyst.</span>\n\nHere is a little snippet of `R` code to do just that in a logistic regression case. We are using the `support2` dataset as an example.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(rms)\ngetHdata(support2)\nf <- lrm(hospdead ~ rcs(age,5) + rcs(temp, 5) + rcs(hrt, 5) + rcs(pafi, 5) + edu + sex, data = support2)\nplot(anova(f))\n```\n\n::: {.cell-output-display}\n![](index_files/figure-html/unnamed-chunk-2-1.png){width=672}\n:::\n:::\n\n\nAnd there you have it. \n\n<img src = \"https://raw.githubusercontent.com/LucyMcGowan/lucymcgowan.github.io/master/figs/df_meme.png\" width = 60%>\n*meme cred: Nick Strayer*\n\n\n## Take Away\n\n* Always fit flexible models using restricted cubic splines\n* Never test for linearity & proceed to remove a nonlinear term based on the result\n* If necessary be choosy about where to spend degrees of freedom\n",
    "supporting": [
      "index_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}