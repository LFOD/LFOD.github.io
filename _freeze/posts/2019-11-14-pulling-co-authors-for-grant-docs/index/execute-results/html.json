{
  "hash": "bf5f50650ffcf6047a2f79e47f62be45",
  "result": {
    "markdown": "---\ntitle: Pulling co-authors for grant docs\nauthor: \"Lucy D'Agostino McGowan\"\ndate: '2019-11-14'\nslug: pulling-co-authors-for-grant-docs\ncategories: [rstats]\ndescription: \"I just submitted my first grant. It turns out you need tons of little things when you submit a grant (who knew!) and one of the little things is a list of all of the coauthors you've published with in the past four years. Instead of tracking that down, I automated the process using R and then stuck the code here so I have it for next time!\"\n---\n\n::: {.cell}\n\n:::\n\n\nSo I just submitted my first grant (yikes) and WOW are there a lot of little pieces! One of the little required pieces was a spreadsheet detailing all of my co-authors for the past 4 years with their affiliations ðŸ˜±. This sounded like a total nightmare to compile <label for=\"tufte-mn-\" class=\"margin-toggle\">&#8853;</label><input type=\"checkbox\" id=\"tufte-mn-\" class=\"margin-toggle\"><span class=\"marginnote\">And I don't have very many papers! I am on a few clinical papers that have a ton of co-authors. **Sidenote to people who know grant things**: Did I actually need to do this for _every_ co-author? Please comment with your advise!</span> and naturally I left it until the last second to do. I am mostly writing this post so I have a way to do this quickly documented for next time. \n\nIt turns out R has once again come to the rescue! There is a ðŸ’£ package, `easyPubMed` that made this easy peasy.  \n\n## Load packages\n\n<label for=\"tufte-mn-\" class=\"margin-toggle\">&#8853;</label><input type=\"checkbox\" id=\"tufte-mn-\" class=\"margin-toggle\"><span class=\"marginnote\">I'm loading four packages: **easyPubMed**, the trusty **tidyverse** ðŸ“¦, one of my all times favorites, **glue**, and the unfortunately named **lubridate**</span>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(easyPubMed) \nlibrary(tidyverse)\nlibrary(glue)\nlibrary(lubridate)\n```\n:::\n\n\n## Pull my papers\n\nHere I'm querying pubmed for the papers I've authored. I'm creating a data frame that includes details about the papers (include all of the authors!).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nquery <- \"Lucy D'Agostino McGowan[AU] OR LD McGowan[AU]\"\nget_pubmed_ids(query) %>%\nfetch_pubmed_data(encoding = \"ASCII\") %>%\ntable_articles_byAuth(included_authors = \"all\", \n                            max_chars = 100, \n                            autofill = TRUE) -> my_papers\n```\n:::\n\n\n## Clean it up\n\nUsing the **glue** package, I combine the first and lastname variables into the `lastname, firstname` form requested by the granting agency. Year is pulled in as a ??character?? variable, so we need to fix that. I also filter out _myself_ and only keep the papers from the past four years. Finally I select just the co-author's name and affiliation and filter out any duplicates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nmy_papers %>%\n  mutate(name = glue(\"{lastname}, {firstname}\"),\n         year = as.numeric((year))) %>%\n  filter(!str_detect(name, \"D'Agostino\"), year >= year(today()) - 4) %>%\n  select(name, address) %>%\n  distinct() -> coauthors\n```\n:::\n\n\nAnd there you have it! ðŸŽ‰\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}