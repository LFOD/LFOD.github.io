{
  "hash": "97d59644bfc5fd44fe2a14ad25c8cdc9",
  "result": {
    "markdown": "---\ntitle: \"Secret Sampling\"\nauthor: \"Sarah Lotspeich and Lucy D'Agostino McGowan\"\ndate: '2017-11-15'\nslug: secret-sampling\ncategories: \n  - rstats\n  - holiday cheer\ntags: \n  - rstats\n  - holiday cheer\ndescription: \"'Tis the season for white elephant / גמד וענק / Yankee swap / secret santa-ing! We thought it'd be particularly fun to do it #rstats style.\"\n---\n\n\n\n'Tis the season for white elephant / Yankee swap / secret santa-ing! There are various rules for this, for our version:  \n\n🏷 each participant receives the name of someone else to purchase a gift for  \n🎁 gifts are exchanged at a party  \n🤔 the receiver is tasked with guessing who the gift-giver was!\n \nWe thought it'd be particularly fun to do it #rstats style.\n\n## Assigning partners\n\nWe had our interested classmates sign up on a [Google Form](https://docs.google.com/forms/u/0/),<label for=\"tufte-mn-\" class=\"margin-toggle\">&#8853;</label><input type=\"checkbox\" id=\"tufte-mn-\" class=\"margin-toggle\"><span class=\"marginnote\">![](/images/2017-11-14/google-form.png)</span> resulting in a Google Sheet with each participant's `name`, `email`, and `interests`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"googlesheets\")\nlibrary(\"dplyr\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ndf <- gs_url(\"https://docs.google.com/spreadsheets/d/1NHbsjZVhvIxzuivXWQvDBst0oMN7ZcCjCbI8XJeXxJI/edit#gid=860103774\") %>%\n  gs_read()\n```\n:::\n\n\nWe began by making a tibble that has `name` in the first column and assigned a random `partner` in the second.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(525)\ndat <- tibble(\n  name = df$name,\n  partner = sample(df$name)\n)\n```\n:::\n\n\n*\"But what if someone was assigned to be their own partner!\"* you may ask. <label for=\"tufte-mn-\" class=\"margin-toggle\">&#8853;</label><input type=\"checkbox\" id=\"tufte-mn-\" class=\"margin-toggle\"><span class=\"marginnote\">![](https://media.giphy.com/media/23WStXFJFKN44/giphy.gif)</span> Have no fear! A `while` loop is here! We allow a `while` loop to iterate until every individual is assigned a partner (who isn't them!).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nwhile (any(dat$name == dat$partner)) {\n  dat <- tibble(\n    name = df$name,\n    partner = sample(df$name)\n  )\n}\n```\n:::\n\n*This is likely not the most efficient way, but we only had 23 friends so it's* 👌 -- *if you get excited about efficiency and would like to share a quicker way to do it, please do! We* ❤️ *to learn!*\n\n**Edit:** Looks like our 🙏 was answered!\n\n<blockquote class=\"twitter-tweet\" data-conversation=\"none\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">What if you just did sample(names) and everyone was assigned to give a give to the next person in the vector?</p>&mdash; Hadley Wickham (@hadleywickham) <a href=\"https://twitter.com/hadleywickham/status/930841037626576896?ref_src=twsrc%5Etfw\">November 15, 2017</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script>\n\nThis could look something like: \n\n::: {.cell}\n\n```{.r .cell-code}\ndat <- df %>%\n  select(name) %>%\n  mutate(name = sample(name)) %>%\n  mutate(partner = lag(name))\ndat$partner[1] <- dat$name[nrow(dat)]\n```\n:::\n\n\nOr like this! (Thanks to our #livefreeordichtomize partner in crime + emoji friend Romain 👯) \n\n<blockquote class=\"twitter-tweet\" data-lang=\"en\"><p lang=\"en\" dir=\"ltr\">Maybe tail(.,-1)</p>&mdash; Romain François (@romain_francois) <a href=\"https://twitter.com/romain_francois/status/930890841522102273?ref_src=twsrc%5Etfw\">November 15, 2017</a></blockquote> <script async src=\"https://platform.twitter.com/widgets.js\" charset=\"utf-8\"></script> \n\n\nWe then do a join to pull the emails and interests back in.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf_name <- df[ , c(\"name\", \"email\")]\ndf_partner <- df[ , c(\"name\", \"interests\")]\ndat <- dat %>%\n  left_join(df_name, c(\"name\" = \"name\")) %>%\n  left_join(df_partner, c(\"partner\" = \"name\"))\n```\n:::\n\n\n## Sending the email\n\n[Karthik](https://twitter.com/_inundata) and I had a blast at the [rOpenSci](https://ropensci.org) unconf creating the 🐴 [ponyexpress package](https://github.com/ropenscilabs/ponyexpress) - what a delightful chance to use it! We didn't want the secret to be spoiled (i.e. we didn't want to know who would be buying us gifts!), so we wrote a script to send an email to our classmates.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## devtools::install_github(\"ropenscilabs/ponyexpress\")\nlibrary(\"ponyexpress\")\n```\n:::\n\n\n<label for=\"tufte-mn-\" class=\"margin-toggle\">&#8853;</label><input type=\"checkbox\" id=\"tufte-mn-\" class=\"margin-toggle\"><span class=\"marginnote\">![](https://assets-auto.rbl.ms/248d7dc3241d5585d0d9feba16933a8f5352c8f3fd6fb575c246725b35128824)</span>\n\n\n::: {.cell}\n\n```{.r .cell-code}\nbody <- \"Dear {name},\n\nYou have been assigned to surprise <b>{partner}</b> with a happy gift! {partner} told us they have the following interests:\n\n<b>{interests}</b>\n\nRemember, the price limit is $20. \n\n<img src = 'https://media.giphy.com/media/zhPXoVIBMtnUs/giphy.gif'> </img>\n\nHappy white elephant-ing,\nSarah & Lucy\"\n\nour_template <- glue::glue(glitter_template)\n\nparcel <- parcel_create(dat,\n                        sender_name = \"Lucy\",\n                        sender_email = \"lucy@myemail.com\",\n                        subject = \"Secret Santa!\",\n                        template = our_template)\n\nparcel_preview(parcel)     \n\nparcel_send(parcel)\n```\n:::\n\n\nThis will create an email like this:\n\n<img src = \"/images/2017-11-14/email.png\" width = \"500\"></img>\n\nAnd that's it! Happy gift-ing 🎁!\n\n![](https://media.giphy.com/media/zhPXoVIBMtnUs/giphy.gif)\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}