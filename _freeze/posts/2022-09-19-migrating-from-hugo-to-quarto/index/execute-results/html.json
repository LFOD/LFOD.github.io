{
  "hash": "3a9de3d81a6576152acdcda1f4bc8e92",
  "result": {
    "markdown": "---\ntitle: \"Migrating from Hugo to Quarto\"\nauthor: Lucy D'Agostino McGowan\ndate: '2022-09-19'\nimage: featured.png\ncategories: [\"rstats\", \"quarto\", \"blog\"]\ndescription: \"We have migrated our blog from Hugo to Quarto! Here are a few quick tips that made the transition a bit smoother.\"\nalias: \"https://livefreeordichotomize.com/2020/04/13/prevalence-and-probability-of-covid/\"\n---\n\n\nWe have migrated our blog from Hugo to Quarto! Here are a few quick tips that made the transition a bit smoother.\n\n## 1. Setting up a Quarto website\n\nIt is super easy to set up a Quarto website. To get the basic template, you can run the following in your terminal:\n\n```{.bash}\nquarto create-project mysite --type website\n```\n\nYou can find lots of details about how to customize your site in the [Quarto Docs](https://quarto.org/docs/websites/). The rest of this post will cover a few things that made the transition smooth for us.\n\n## 2. Moving .Rmd files from Hugo to your new site\n\nIn Hugo, my .Rmd files were in the following folder under the main project: `content/post`. These were often individual files, rather than nested in folders. For my Quarto site, I wanted them in a folder called `post` and I wanted each post to have it's only folder with content in a file called `index.qmd` nested within. I wrote a quick R script to help me do this.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(fs)\n\n# pull all .Rmd files from my blog\nfiles_rmd <- list.files(\n  \"~/livefreeordichotomize/content/post\",\n  pattern = \"*.Rmd\")\n# remove the .Rmd for the folders\nfolders <- gsub(\".Rmd\", \"\", files_rmd)\n\n# pull again, with full names\nfull_files <- list.files(\n  \"~/livefreeordichotomize/content/post\",\n  pattern = \"*.Rmd\", \n  full.names = TRUE)\n\n\n# create folders\ndir_create(glue::glue(\"posts/{folders}\"))\n\n# copy the .Rmd files into a new folder, named according to the old file name\npurrr::walk2(\n  full_files, \n  folders, \n  ~file_copy(.x, glue::glue(\"posts/{.y}/index.qmd\")))\n```\n:::\n\n\n## 3. Setting up a 404 pages for readers with old links\n\nSince we have rerouted where many of the files are, I set up a 404 page that will allow readers to quickly find a post if they have an old link. To do this, I created a folder in the top of the project called `404.qmd` containing the following:\n\n```yaml\n---\ntitle: Page Not Found\nlisting:\n  contents: posts\n  type: table\n  sort: \"date\"\n---\n```\n\nThis will create a searchable table listing of all of the previous posts, allowing readers to quickly find the link they are looking for.\n\n**UPDATE** You can add the old links under an `aliases` parameter in each posts' YAML.\n\n\n## 4. Comments and Google analytics\n\nIt is straightforward to incorporate comments on your blog -- our old site used utterance. Likewise, it is simple to add Google Analytics. To use this in Quarto, we can add the following to the website's global `yaml`: \n\n\n::: {.cell}\n\n```{.yaml .cell-code}\nwebsite:\n  comments: \n    utterances:\n      repo: lfod/lfod.github.io\n  google-analytics: \"UA------\"\n```\n:::\n\n\nTo see our full setup, check out our GitHub repo: [github.com/LFOD/LFOD.github.io](https://github.com/LFOD/LFOD.github.io)\n\nHave other questions? Feel free to leave them in the comments!\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}