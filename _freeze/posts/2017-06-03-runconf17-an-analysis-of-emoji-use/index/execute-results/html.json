{
  "hash": "12ade558f9d2a1a4ab745d03041d2399",
  "result": {
    "markdown": "---\nauthor: \"Lucy D'Agostino McGowan\"\ndate: 2017-06-03T20:47:20-05:00\ntitle: \"runconf17, an analysis of emoji use\"\ncategories: [\"rOpenSci\",\"rstats\",\"conferences\", \"emojis\"]\ntags: [\"rOpenSci\",\"rstats\",\"conferences\", \"emojis\"]\nshare: true\ndescription: \"I had such a delightful time at rOpenSci's unconference. Not only was it extremely productive (21 packages were produced!), but in between the crazy productivity was some epic community building.\"\n---\n\n\n<span class=\"newthought\">I had *such* a delightful time</span> at rOpenSci's [unconference](http://unconf17.ropensci.org) last week. \n\n::: column-margin\n21 üì¶ were produced!\n:::\n\nNot only was it [extremely productive](https://ropenscilabs.github.io/runconf17-projects/), but in between the crazy productivity was some epic community building.\n\n::: column-margin\nfor the record, I'm an #rchickenlady, [IT'S HAPPENING](https://twitter.com/search?q=%23RChickenLadies&src=typd)\n:::\n[Stefanie](https://twitter.com/StefanieButland) kicked the conference off with ice breakers, where we explored topics ranging from #rcatladies & #rdogfellas to impostor syndrome. It was an excellent way to get conversations starting!\n\n## work\n<span class=\"newthought\">[Karthik](https://twitter.com/_inundata) and I worked on</span> two packages:\n\n[arresteddev](https://github.com/ropenscilabs/arresteddev): a package for when your development is going awry! \n::: column-margin\nMostly, this was a good excuse to look up Arrested Development gifs, which, we established, is pronounced with a g like giraffe.\n<img src = \"https://img.buzzfeed.com/buzzfeed-static/static/2016-11/17/13/asset/buzzfeed-prod-fastlane01/anigif_sub-buzz-29187-1479408030-4.gif\"></img>\n:::\nIncludes functions such as `lmgtfy()`, that will seamlessly google your last error message, [David Robinson's](https://twitter.com/drob) `tracestack()` that will query your last error message on Stack Overflow, and `squirrel()`, a function that will randomly send you to a distracting website - for when things are really going poorly üíÅ. \n\n[ponyexpress](https://github.com/ropenscilabs/ponyexpress): a package for automating speedy emails from R - copy and paste neigh more üê¥. This package allows you to send templated emails to a list of contacts. Great for conferences, birthday parties, or karaoke invitations.\n\n## play\n<span class=\"newthought\">Between our package building</span>, there were SO many opportunities to get to know some of the most talented people.\n\n::: column-margin\n<img src = \"https://github.com/LFOD/real-blog/raw/master/static/images/jenny_lucy.jpg\"\"> </img><br>\n*Jenny & I enthusiastically working on [googledrive](https://github.com/tidyverse/googledrive).*\n:::\n\nMore than anything, this was an excellent opportunity to feel like a part of a community -- and a community that certainly extends beyond the people that attended the unconference! There were so many people following along, tweeting along, and assisting along the way.\n\n\n\na few highlights: \n\n* üç® ice cream outings\n* üé§ karaoke adventures  \n* üç∏ happy hours (complete with [R-themed drinks](https://twitter.com/revodavid/status/867901254466506752))\n* üí™ Karthik attempting to [lick his elbow](https://twitter.com/kara_woo/status/868353913296044032)\n\n## analysis \n\n::: column-margin\n*Note: this is not particularly statistically rigorous, but it is VERY fun.*\n:::\n\n<span class=\"newthought\">In an effort to stay on brand</span>, I decided to do a small analysis of the tweets that came out of #runconf17. I designed a small study:\n\n* pulled all tweets (excluding retweets) using the hashtag #runconf17 between May 24th and May 30th\n* also pulled all tweets (excluding retweets) using the hashtag #rstats during the same time period\n\n<span style=\"color:#EB6864\">\n**Question**: Are twitter users who used the #runconf17 hashtag more likely to use emojis than those who only tweeted with the #rstats hashtag during the same time period?\n</span>\n\n\n::: column-margin\nI used the **rtweet** package to pull the tweets, **dplyr** and **fuzzyjoin** to wrangle the data a bit, and **rms** to analyze it.\n:::\n\n\n::: {.cell warnings='false'}\n\n```{.r .cell-code}\nlibrary(\"rtweet\")\nlibrary(\"dplyr\")\nlibrary(\"fuzzyjoin\")\nlibrary(\"rms\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrunconf <- search_tweets(q = \"#runconf17 AND since:2017-05-23 AND until:2017-05-31\",\n                         n = 1e4, \n                         include_rts = FALSE)\n\nrstats <- search_tweets(q = \"#rstats AND since:2017-05-23 AND until:2017-05-31\",\n                        n = 1e4,\n                        include_rts = FALSE)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n\n::: column-margin\nThe emoji dictionary was discovered by the lovely [Ma√´lle](https://twitter.com/ma_salmon)!\n:::\n<span class=\"newthought\">After pulling in the tweets</span>, I categorized tweeters as either using the #runconf17 hashtag during the week or not. I then merged the tweets with an emoji dictionary, and grouped by tweeter. If the tweeter used an emoji at any point during the week, they were categorized as an emoji-user, if not, they were sad (jk, there is room for all here!).\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## create variable for whether tweeted about runconf\nrunconf$runconf <- \"yes\"\n\nrstats <- rstats %>%\n  mutate(runconf = ifelse(screen_name %in% runconf$screen_name, \"yes\", \"no\"))\n\n## load in the emoji dictionary\ndico <- readr::read_csv2(\"https://raw.githubusercontent.com/today-is-a-good-day/emojis/master/emDict.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n‚Ñπ Using \"','\" as decimal and \"'.'\" as grouping mark. Use `read_delim()` for more control.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nRows: 842 Columns: 4\n‚îÄ‚îÄ Column specification ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ\nDelimiter: \";\"\nchr (4): Description, Native, Bytes, R-encoding\n\n‚Ñπ Use `spec()` to retrieve the full column specification for this data.\n‚Ñπ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n\n\n:::\n\n```{.r .cell-code}\n## combine datasets, keep only unique tweets\ndata <- bind_rows(runconf, rstats) %>%\n  distinct(text, .keep_all = TRUE)\n\n## summarize by user, did they tweet about runconf in the past week \n## & did they use an emoji in the past week?\nused_emoji <- regex_left_join(data, dico, by = c(text = \"Native\")) %>%\n  select(screen_name, \n         text,\n         runconf,\n         emoji = Native) %>%\n  group_by(screen_name) %>%\n  mutate(tot_emoji = sum(!is.na(emoji)),\n         used_emoji = ifelse(tot_emoji > 0, \"yes\", \"no\"),\n         tot_tweets = n_distinct(text)) %>%\n  distinct(screen_name, .keep_all = TRUE)\n```\n:::\n\n\n## results\n<span class=\"newthought\">We had 526 tweeters</span> that just used the #rstats hashtag, and 107 that tweeted with the #runconf17 hashtag. \n::: column-margin\nTHESE ARE MY PEOPLE üôå\n:::\nAmong the #rstats tweeters, 5.9% used at least one emoji in their tweets, whereas among #runconf17 tweeters, 25.2% used emojis! \n\n\n::: {.cell}\n\n```{.r .cell-code}\nused_emoji %>%\n  group_by(`tweeted #runconf` = runconf, `used emoji` = used_emoji) %>%\n  tally() %>%\n  mutate(`%` = 100*prop.table(n)) %>%\n  knitr::kable(digits = 1)\n```\n\n::: {.cell-output-display}\n\n\n|tweeted #runconf |used emoji |   n|    %|\n|:----------------|:----------|---:|----:|\n|no               |no         | 495| 94.1|\n|no               |yes        |  31|  5.9|\n|yes              |no         |  80| 74.8|\n|yes              |yes        |  27| 25.2|\n\n\n:::\n:::\n\n\n\n<span class=\"newthought\">Alright, that looks pretty promising</span>, but let's get some confidence intervals. It's time to model it! üíÉ  \n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n## modeling time!\ndd <- datadist(used_emoji)\noptions(datadist = \"dd\")\n\nlrm(used_emoji~runconf, data = used_emoji) %>%\n  summary() %>%\n  html()\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<table class='gmisc_table' style='border-collapse: collapse; margin-top: 1em; margin-bottom: 1em;' >\n<thead>\n<tr><td colspan='8' style='text-align: left;'>\nEffects          &emsp;&emsp;Response: <code>used_emoji</code></td></tr>\n<tr><th style='border-bottom: 1px solid grey; font-weight: 900; border-top: 2px solid grey; text-align: center;'></th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: right;'>Low</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: right;'>High</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: right;'>&Delta;</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: right;'>Effect</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: right;'>S.E.</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: right;'>Lower 0.95</th>\n<th style='font-weight: 900; border-bottom: 1px solid grey; border-top: 2px solid grey; text-align: right;'>Upper 0.95</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style='text-align: left;'>runconf --- yes:no</td>\n<td style='padding-left:4ex; text-align: right;'>1</td>\n<td style='padding-left:4ex; text-align: right;'>2</td>\n<td style='padding-left:4ex; text-align: right;'></td>\n<td style='padding-left:4ex; text-align: right;'>1.684</td>\n<td style='padding-left:4ex; text-align: right;'>0.2895</td>\n<td style='padding-left:4ex; text-align: right;'>1.117</td>\n<td style='padding-left:4ex; text-align: right;'>2.252</td>\n</tr>\n<tr>\n<td style='border-bottom: 2px solid grey; text-align: left;'>&emsp;<em>Odds Ratio</em></td>\n<td style='padding-left:4ex; border-bottom: 2px solid grey; text-align: right;'>1</td>\n<td style='padding-left:4ex; border-bottom: 2px solid grey; text-align: right;'>2</td>\n<td style='padding-left:4ex; border-bottom: 2px solid grey; text-align: right;'></td>\n<td style='padding-left:4ex; border-bottom: 2px solid grey; text-align: right;'>5.389</td>\n<td style='padding-left:4ex; border-bottom: 2px solid grey; text-align: right;'></td>\n<td style='padding-left:4ex; border-bottom: 2px solid grey; text-align: right;'>3.056</td>\n<td style='padding-left:4ex; border-bottom: 2px solid grey; text-align: right;'>9.505</td>\n</tr>\n</tbody>\n</table>\n```\n\n:::\n:::\n\n\n::: column-margin\n<img src = \"http://media.tumblr.com/4d904a2237a400973c9ba6bfd7ef8404/tumblr_inline_mtwlrqiTCg1qih9gi.gif\">\n</img>\n:::\n\n\n<span style=\"color:#EB6864\">\n**Tweeting the #runconf17 hashtag seems undeniably associated with a higher odds of emoji use (OR: 5.4, 95% CI: 3.1, 9.5).**\n</span>\n\n## most popular emojis\n\n<span class=\"newthought\">Now let's checkout</span> which emojis were most popular among #runconf17 tweeters. This time I'll allow for retweets üëØ\n\n::: column-margin\nFor this I used ggplot2, magick, and  [webshot](https://github.com/wch/webshot)\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(\"ggplot2\")\nlibrary(\"webshot\")\nlibrary(\"magick\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nrunconf_emojis <- search_tweets(q = \"#runconf17 AND since:2017-05-23 AND until:2017-05-31\",\n                                n = 1e4)\n```\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nemojis <- regex_left_join(runconf_emojis, dico, by = c(text = \"Native\")) %>%\n  group_by(Native) %>%\n  filter(!is.na(Native)) %>%\n  summarise(n = n()) %>%\n  arrange(desc(n)) %>%\n  head(15) %>%\n  mutate(num = 1:15)\n```\n:::\n\n::: {.cell}\n\n:::\n\n\nThis (like many things I do) was very much inspired by Ma√´lle's [post](http://www.masalmon.eu/2017/02/18/complot/).\n\n\n::: {.cell}\n\n```{.r .cell-code}\nplot_emojis <- function(limit) {\n  emojis_filter <- emojis %>%\n    filter(emojis$n <= limit)\n  out_svg <- paste0(\"file://emojis_\", limit,\".svg\")\n  out_png <- paste0(\"emojis_\", limit, \".png\")\n  p <- ggplot(emojis_filter, aes(num, n)) + \n    geom_col() + \n    xlim(c(0,16)) +\n    geom_text(aes(x = num, \n                  y = n + 1,\n                  label = Native), size = 5)  +\n    theme(axis.text.y=element_blank(),\n          axis.ticks=element_blank(),\n          legend.position=\"none\") + \n    ylim(c(0, max(emojis$n) + 10)) +\n    xlab(\"emoji\") + \n    ggtitle(\"#runconf17 emojis\") +\n    coord_flip() \n  print(p)\n  gridSVG::grid.export(out_svg)\n  webshot(out_svg,\n          out_png,\n          vwidth = 100,\n          vheight = 100,\n          zoom = 3)\n  out_png\n}\n```\n:::\n\n\nNow let's make them into a gif!\n\n::: {.cell}\n\n```{.r .cell-code}\nout_png <- purrr::map_chr(emojis$n, plot_emojis)\n\npurrr::map(unique(rev(out_png)), image_read) %>%\n  image_join() %>%\n  image_animate(fps=1) %>%\n  image_write(\"runconf_emojis.gif\")\n```\n:::\n\n\n<img src = \"https://github.com/LFOD/real-blog/raw/master/static/images/runconf_emojis.gif\" width = \"110%\"> </img>\n\n::: column-margin\nPhew, the üêî\n:::\nThe purple heart seems to be the most popular emoji, which makes sense given [25% of us were #RLadies](https://twitter.com/nistara_r/status/867974699044687872)! I think it's a credit to the awesome geographic diversity that we have two different globe emojis in our top 15!\n\nAll in all, it was an epic experience. Thank you so much to the conference organizers, attendees, and #runconf17 tweeters for such a delightful week!",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}